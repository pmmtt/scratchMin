{"version":3,"file":"cardgrid.js","mappings":"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","sources":["webpack://scratchmin-theme/external window \"ReactJSXRuntime\"","webpack://scratchmin-theme/external window [\"wp\",\"blockEditor\"]","webpack://scratchmin-theme/external window [\"wp\",\"blocks\"]","webpack://scratchmin-theme/external window [\"wp\",\"components\"]","webpack://scratchmin-theme/external window [\"wp\",\"data\"]","webpack://scratchmin-theme/webpack/bootstrap","webpack://scratchmin-theme/webpack/runtime/compat get default export","webpack://scratchmin-theme/webpack/runtime/define property getters","webpack://scratchmin-theme/webpack/runtime/hasOwnProperty shorthand","webpack://scratchmin-theme/webpack/runtime/make namespace object","webpack://scratchmin-theme/./blocks/cardgrid/cardgrid.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { InnerBlocks, BlockControls } from '@wordpress/block-editor';\nimport { select, subscribe } from '@wordpress/data';\nimport { ToolbarGroup, ToolbarButton } from '@wordpress/components';\n\nlet blockLimit = 8;\nlet blockName = 'omnifseupdt/gridcard';\n\nregisterBlockType('omnifseupdt/cardgrid', {\n     title: 'Card Grid',\n     icon: 'grid-view',\n     category: 'layout',\n     attributes: {\n          gridType1: {\n               type: 'string',\n               default: 'quick-links', // Set default to 'quick-links'\n          },\n          gridType2: {\n               type: 'string',\n               default: '', // Set default to empty string\n          },\n     },\n     supports: {\n          color: {\n               text: false,\n               link: false,\n               background: true\n          }\n     },\n     edit: function (props) {\n          let blockClientId = props.clientId;\n          let { attributes, setAttributes } = props;\n          let { gridType1, gridType2 } = attributes;\n\n          subscribe(() => {\n               let innerBlocks = select('core/block-editor').getBlocks(blockClientId);\n               let innerBlockCount = innerBlocks.reduce((count, block) => block.name === blockName ? count + 1 : count, 0);\n\n               if (innerBlockCount > blockLimit) {\n                    let lastInnerBlock = innerBlocks[innerBlocks.length - 1];\n                    if (lastInnerBlock.name === blockName) {\n                         wp.data.dispatch('core/block-editor').removeBlock(lastInnerBlock.clientId);\n                    }\n               }\n          });\n\n          return (\n               <>\n                    <BlockControls>\n                         <ToolbarGroup>\n                              <ToolbarButton\n                                   className={gridType1 === 'quick-links' ? 'is-active' : ''}\n                                   onClick={() => setAttributes({ gridType1: 'quick-links' })}\n                              >\n                                   Quick Links\n                              </ToolbarButton>\n                              <ToolbarButton\n                                   className={gridType1 === 'link-grid' ? 'is-active' : ''}\n                                   onClick={() => setAttributes({ gridType1: 'link-grid' })}\n                              >\n                                   Link Grid\n                              </ToolbarButton>\n                              <ToolbarButton\n                                   className={gridType1 === 'icon-grid' ? 'is-active' : ''}\n                                   onClick={() => setAttributes({ gridType1: 'icon-grid' })}\n                              >\n                                   Icon Grid\n                              </ToolbarButton>\n                         </ToolbarGroup>\n                         <ToolbarGroup>\n                              <ToolbarButton\n                                   className={gridType2 === 'add-sub-head' ? 'is-active' : ''}\n                                   onClick={() => setAttributes({ gridType2: 'add-sub-head' })}\n                              >\n                                   Add block description\n                              </ToolbarButton>\n                              <ToolbarButton\n                                   className={gridType2 === 'rmv-sub-head' ? 'is-active' : ''}\n                                   onClick={() => setAttributes({ gridType2: 'rmv-sub-head' })}\n                              >\n                                   Remove block description\n                              </ToolbarButton>\n                         </ToolbarGroup>\n                    </BlockControls>\n                    <section className={`card_grid ${gridType1} ${gridType2}`}>\n                         <InnerBlocks\n                              className={['card_grid']}\n                              allowedBlocks={[blockName]}\n                              template={[\n                                   [blockName]\n                              ]}\n                              templateInsertUpdatesSelection={false}\n                         />\n                    </section>\n               </>\n          );\n     },\n     save: function (props) {\n          let { gridType1 } = props.attributes;\n          let { gridType2 } = props.attributes;\n\n          return (\n               <section className={`card_grid ${gridType1} ${gridType2}`}>\n                    <InnerBlocks.Content />\n               </section>\n          );\n     },\n});"],"names":["registerBlockType","InnerBlocks","BlockControls","select","subscribe","ToolbarGroup","ToolbarButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","blockLimit","blockName","title","icon","category","attributes","gridType1","type","default","gridType2","supports","color","text","link","background","edit","props","blockClientId","clientId","setAttributes","innerBlocks","getBlocks","innerBlockCount","reduce","count","block","name","lastInnerBlock","length","wp","data","dispatch","removeBlock","children","className","onClick","allowedBlocks","template","templateInsertUpdatesSelection","save","Content"],"sourceRoot":""}