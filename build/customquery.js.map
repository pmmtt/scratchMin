{"version":3,"file":"customquery.js","mappings":";;;;AAAA,CAAC,UAAUA,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EACrD,IAAIC,EAAE,GAAGH,OAAO,CAACI,aAAa;EAC9B,IAAIC,iBAAiB,GAAGP,MAAM,CAACO,iBAAiB;EAChD,IAAIC,iBAAiB,GAAGP,MAAM,CAACO,iBAAiB;EAChD,IAAIC,SAAS,GAAGN,UAAU,CAACM,SAAS;EACpC,IAAIC,YAAY,GAAGP,UAAU,CAACO,YAAY;EAC1C,IAAIC,aAAa,GAAGR,UAAU,CAACQ,aAAa;EAE5CJ,iBAAiB,CAAC,2BAA2B,EAAE;IAC1CK,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE;MACPC,aAAa,EAAE;QACVC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE;MACd,CAAC;MACDC,eAAe,EAAE;QACZF,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACd;IACL,CAAC;IAEDE,IAAI,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAIN,UAAU,GAAGM,KAAK,CAACN,UAAU;MACjC,IAAIO,aAAa,GAAGD,KAAK,CAACC,aAAa;MAEvC,OAAO,CACFjB,EAAE,CAACG,iBAAiB,EAAE,CAAC,CAAC,EACnBH,EAAE,CAACI,SAAS,EAAE;QAAEG,KAAK,EAAE,UAAU;QAAEW,WAAW,EAAE;MAAK,CAAC,EACjDlB,EAAE,CAACK,YAAY,EAAE;QACZc,KAAK,EAAE,iBAAiB;QACxBC,KAAK,EAAEV,UAAU,CAACC,aAAa;QAC/BU,QAAQ,EAAE,SAAAA,CAAUD,KAAK,EAAE;UACtBH,aAAa,CAAC;YAAEN,aAAa,EAAES;UAAM,CAAC,CAAC;QAC5C,CAAC;QACDE,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;MACV,CAAC,CAAC,EACFvB,EAAE,CAACM,aAAa,EAAE;QACba,KAAK,EAAE,sBAAsB;QAC7BK,OAAO,EAAEd,UAAU,CAACI,eAAe;QACnCO,QAAQ,EAAE,SAAAA,CAAUD,KAAK,EAAE;UACtBH,aAAa,CAAC;YAAEH,eAAe,EAAEM;UAAM,CAAC,CAAC;QAC9C;MACL,CAAC,CACN,CACL,CAAC,EACDpB,EAAE,CAAC,KAAK,EAAE;QAAEyB,SAAS,EAAET,KAAK,CAACS;MAAU,CAAC,EACnCzB,EAAE,CAAC,KAAK,EAAE;QAAEyB,SAAS,EAAET,KAAK,CAACS;MAAU,CAAC,EACnC,6CACL,CACL,CAAC,CACL;IACN,CAAC;IAEDC,IAAI,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI;IAChB;EACL,CAAC,CAAC;AACP,CAAC,EAAEC,MAAM,CAACC,EAAE,CAACjC,MAAM,EAAEgC,MAAM,CAACC,EAAE,CAACC,WAAW,EAAEF,MAAM,CAACC,EAAE,CAAC/B,OAAO,EAAE8B,MAAM,CAACC,EAAE,CAAC9B,UAAU,EAAE6B,MAAM,CAACC,EAAE,CAAC7B,QAAQ,CAAC,C","sources":["webpack://scratchmin-theme/./blocks/customquery/customquery.js"],"sourcesContent":["(function (blocks, editor, element, components, apiFetch) {\n     var el = element.createElement;\n     var registerBlockType = blocks.registerBlockType;\n     var InspectorControls = editor.InspectorControls;\n     var PanelBody = components.PanelBody;\n     var RangeControl = components.RangeControl;\n     var ToggleControl = components.ToggleControl;\n\n     registerBlockType('omnifseupdt/posts-display', {\n          title: 'Posts Display',\n          icon: 'admin-post',\n          category: 'widgets',\n          attributes: {\n               numberOfPosts: {\n                    type: 'number',\n                    default: 2,\n               },\n               showStickyPosts: {\n                    type: 'boolean',\n                    default: false,\n               },\n          },\n\n          edit: function (props) {\n               var attributes = props.attributes;\n               var setAttributes = props.setAttributes;\n\n               return [\n                    el(InspectorControls, {},\n                         el(PanelBody, { title: 'Settings', initialOpen: true },\n                              el(RangeControl, {\n                                   label: 'Number of posts',\n                                   value: attributes.numberOfPosts,\n                                   onChange: function (value) {\n                                        setAttributes({ numberOfPosts: value });\n                                   },\n                                   min: 2,\n                                   max: 4,\n                              }),\n                              el(ToggleControl, {\n                                   label: 'Display Sticky Posts',\n                                   checked: attributes.showStickyPosts,\n                                   onChange: function (value) {\n                                        setAttributes({ showStickyPosts: value });\n                                   },\n                              })\n                         )\n                    ),\n                    el('div', { className: props.className },\n                         el('div', { className: props.className },\n                              'Posts will be displayed here in the editor.'\n                         )\n                    )\n               ];\n          },\n\n          save: function () {\n               return null;\n          },\n     });\n})(window.wp.blocks, window.wp.blockEditor, window.wp.element, window.wp.components, window.wp.apiFetch);"],"names":["blocks","editor","element","components","apiFetch","el","createElement","registerBlockType","InspectorControls","PanelBody","RangeControl","ToggleControl","title","icon","category","attributes","numberOfPosts","type","default","showStickyPosts","edit","props","setAttributes","initialOpen","label","value","onChange","min","max","checked","className","save","window","wp","blockEditor"],"sourceRoot":""}