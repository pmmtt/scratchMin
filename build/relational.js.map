{"version":3,"file":"relational.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACjB;AACsD;AAClB;AAChB;AACX;AAAA;AAE9CA,oEAAiB,CAAC,uBAAuB,EAAE;EACtCiB,KAAK,EAAEhB,mDAAE,CAAC,YAAY,EAAE,YAAY,CAAC;EACrCiB,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE;IACPC,MAAM,EAAE;MACHC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACLF,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACd,CAAC;IACDE,SAAS,EAAE;MACNH,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACd,CAAC;IACDG,WAAW,EAAE;MACRJ,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACd,CAAC;IACDI,WAAW,EAAE;MACRL,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACd,CAAC;IACDK,QAAQ,EAAE;MACLN,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACd;EACL,CAAC;EACDM,IAAI,EAAEA,CAAC;IAAET,UAAU;IAAEU;EAAc,CAAC,KAAK;IACpC,MAAM;MAAET,MAAM;MAAEG,QAAQ;MAAEG;IAAY,CAAC,GAAGP,UAAU;IAEpD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtB,4DAAQ,CAACU,UAAU,CAACM,WAAW,CAAC;IAEpFjB,4DAAW,CAAC,MAAM,CAAC;IACnB,MAAMwB,KAAK,GAAGzB,0DAAS,CAAC0B,MAAM,IAAI;MAC7B,OAAOA,MAAM,CAAC,MAAM,CAAC,CAACC,gBAAgB,CAAC,UAAU,EAAEX,QAAQ,EAAE;QAAEY,QAAQ,EAAE;MAAI,CAAC,CAAC;IACpF,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;IAEd,MAAMa,WAAW,GAAGJ,KAAK,GAAGA,KAAK,CAACK,GAAG,CAACC,IAAI,KAAK;MAAEC,KAAK,EAAED,IAAI,CAACtB,KAAK,CAACwB,QAAQ;MAAEC,KAAK,EAAEH,IAAI,CAACI;IAAG,CAAC,CAAC,CAAC,GAAG,EAAE;IAEpGnC,0DAAS,CAAC0B,MAAM,IAAI;MACf,MAAMK,IAAI,GAAGL,MAAM,CAAC,MAAM,CAAC,CAACU,eAAe,CAAC,UAAU,EAAE,MAAM,EAAExB,UAAU,CAACC,MAAM,CAAC;MAClF,IAAIkB,IAAI,IAAIA,IAAI,CAACM,OAAO,CAACJ,QAAQ,KAAKV,kBAAkB,EAAE;QACrDC,qBAAqB,CAACO,IAAI,CAACM,OAAO,CAACJ,QAAQ,CAAC;MACjD;IACL,CAAC,CAAC;IAEF,MAAMK,iBAAiB,GAAG,MAAOC,SAAS,IAAK;MAC1C,IAAIA,SAAS,KAAK1B,MAAM,EAAE;QACrB,IAAI0B,SAAS,KAAKC,SAAS,IAAID,SAAS,KAAK,IAAI,EAAE;UAC9C,MAAME,YAAY,GAAGhB,KAAK,CAACiB,IAAI,CAACX,IAAI,IAAIA,IAAI,CAACI,EAAE,CAACQ,QAAQ,CAAC,CAAC,KAAKJ,SAAS,CAACI,QAAQ,CAAC,CAAC,CAAC;UACpF,IAAIF,YAAY,EAAE;YACbnB,aAAa,CAAC;cACTT,MAAM,EAAE4B,YAAY,CAACN,EAAE;cACvBlB,SAAS,EAAEwB,YAAY,CAAChC,KAAK,CAACwB,QAAQ;cACtCf,WAAW,EAAEuB,YAAY,CAACJ,OAAO,CAACJ,QAAQ;cAC1Cb,QAAQ,EAAEqB,YAAY,CAACG;YAC5B,CAAC,CAAC;UACP;QACL;MACL;IACL,CAAC;IAED,oBACKtC,uDAAA;MAAAuC,QAAA,gBACKvC,uDAAA,CAACZ,sEAAiB;QAAAmD,QAAA,gBACbvC,uDAAA,CAACT,4DAAS;UAACY,KAAK,EAAEhB,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAE;UAAAoD,QAAA,gBAC/CzC,sDAAA,CAACN,gEAAa;YACTkC,KAAK,EAAEvC,mDAAE,CAAC,WAAW,EAAE,YAAY,CAAE;YACrCyC,KAAK,EAAElB,QAAS;YAChB8B,OAAO,EAAE,CACJ;cAAEd,KAAK,EAAE,MAAM;cAAEE,KAAK,EAAE;YAAO,CAAC,EAChC;cAAEF,KAAK,EAAE,MAAM;cAAEE,KAAK,EAAE;YAAO,CAAC,EAChC;cAAEF,KAAK,EAAE,YAAY;cAAEE,KAAK,EAAE;YAAc,CAAC,EAC7C;cAAEF,KAAK,EAAE,QAAQ;cAAEE,KAAK,EAAE;YAAQ,CAAC,EACnC;cAAEF,KAAK,EAAE,SAAS;cAAEE,KAAK,EAAE;YAAW,CAAC,CAC1C;YACFa,QAAQ,EAAGb,KAAK,IAAKZ,aAAa,CAAC;cAAEN,QAAQ,EAAEkB;YAAM,CAAC;UAAE,CAC5D,CAAC,eACF9B,sDAAA,CAACN,gEAAa;YACTkC,KAAK,EAAEvC,mDAAE,CAAC,MAAM,EAAE,YAAY,CAAE;YAChCyC,KAAK,EAAErB,MAAM,CAAC8B,QAAQ,CAAC,CAAE;YACzBG,OAAO,EAAE,CACJ;cAAEd,KAAK,EAAE,eAAe;cAAEE,KAAK,EAAE;YAAG,CAAC,EACrC,GAAGL,WAAW,CACjB;YACFkB,QAAQ,EAAGb,KAAK,IAAKI,iBAAiB,CAACJ,KAAK;UAAE,CAClD,CAAC;QAAA,CACI,CAAC,eACZ5B,uDAAA,CAACT,4DAAS;UAACY,KAAK,EAAEhB,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAE;UAAAoD,QAAA,gBAC9CzC,sDAAA,CAACR,qEAAgB;YAAAiD,QAAA,eACZzC,sDAAA,CAACT,gEAAW;cACPqD,QAAQ,EAAGC,KAAK,IAAK3B,aAAa,CAAC;gBAAEH,WAAW,EAAE8B,KAAK,CAACC;cAAI,CAAC,CAAE;cAC/DC,YAAY,EAAE,CAAC,OAAO,CAAE;cACxBC,MAAM,EAAEA,CAAC;gBAAEC;cAAK,CAAC,kBACZjD,sDAAA,CAACL,yDAAM;gBAACuD,OAAO,EAAED,IAAK;gBAACE,SAAS;gBAACC,OAAO;gBAAAX,QAAA,EAClC1B,WAAW,GAAG1B,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAC,GAAGA,mDAAE,CAAC,cAAc,EAAE,YAAY;cAAC,CAC/E;YACX,CACN;UAAC,CACW,CAAC,EAClB0B,WAAW,iBACPb,uDAAA;YAAKmD,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAAb,QAAA,gBAC7BzC,sDAAA;cAAKuD,GAAG,EAAExC,WAAY;cAACyC,GAAG,EAAEnE,mDAAE,CAAC,gBAAgB,EAAE,YAAY,CAAE;cAACgE,KAAK,EAAE;gBAAEI,KAAK,EAAE;cAAO;YAAE,CAAE,CAAC,eAC5FzD,sDAAA,CAACL,yDAAM;cAACuD,OAAO,EAAEA,CAAA,KAAMhC,aAAa,CAAC;gBAAEH,WAAW,EAAE;cAAG,CAAC,CAAE;cAAC2C,MAAM;cAACC,aAAa;cAAAlB,QAAA,EACzEpD,mDAAE,CAAC,cAAc,EAAE,YAAY;YAAC,CAC9B,CAAC;UAAA,CACT,CACT;QAAA,CACK,CAAC;MAAA,CACE,CAAC,eACpBW,sDAAA;QAAK4D,SAAS,EAAC,mBAAmB;QAAAnB,QAAA,EAC5BhC,MAAM,gBACFP,uDAAA,CAAAE,uDAAA;UAAAqC,QAAA,gBACKzC,sDAAA;YAAAyC,QAAA,EACM1B,WAAW,iBAAIf,sDAAA;cAAKuD,GAAG,EAAExC,WAAY;cAACyC,GAAG,EAAEhD,UAAU,CAACK;YAAU,CAAE;UAAC,CACjE,CAAC,eACTX,uDAAA;YAAK2D,KAAK,EAAC,oBAAoB;YAAApB,QAAA,gBAC1BzC,sDAAA;cAAG6D,KAAK,EAAC,IAAI;cAAApB,QAAA,EAAEjC,UAAU,CAACK;YAAS,CAAI,CAAC,eACxCb,sDAAA;cAAG4D,SAAS,EAAC,eAAe;cAACE,uBAAuB,EAAE;gBAAEC,MAAM,EAAE5C,kBAAkB,GAAG;cAA0Z;YAAE,CAAE,CAAC;UAAA,CACpf,CAAC;QAAA,CACT,CAAC,gBAEHnB,sDAAA;UAAAyC,QAAA,EAAG;QAAiC,CAAG;MAC3C,CACD,CAAC;IAAA,CACN,CAAC;EAEhB,CAAC;EACDuB,IAAI,EAAEA,CAAC;IAAExD;EAAW,CAAC,KAAK;IACrB,MAAM;MAAEO,WAAW;MAAEC;IAAS,CAAC,GAAGR,UAAU;IAC5C,oBACKN,uDAAA;MAAK0D,SAAS,EAAC,mBAAmB;MAAAnB,QAAA,gBAC7BzC,sDAAA;QAAAyC,QAAA,EACM1B,WAAW,iBAAIf,sDAAA;UAAKuD,GAAG,EAAExC,WAAY;UAACyC,GAAG,EAAEhD,UAAU,CAACK;QAAU,CAAE;MAAC,CACjE,CAAC,eACTb,sDAAA;QAAK6D,KAAK,EAAC,oBAAoB;QAAApB,QAAA,eAC1BvC,uDAAA;UAAG+D,IAAI,EAAEjD,QAAS;UAAAyB,QAAA,gBACbzC,sDAAA;YAAG6D,KAAK,EAAC,IAAI;YAAApB,QAAA,EAAEjC,UAAU,CAACK;UAAS,CAAI,CAAC,eACxCb,sDAAA;YAAG4D,SAAS,EAAC,eAAe;YAACE,uBAAuB,EAAE;cAAEC,MAAM,EAAEvD,UAAU,CAACM,WAAW,GAAG;YAA0Z;UAAE,CAAE,CAAC;QAAA,CAC1f;MAAC,CACJ,CAAC;IAAA,CACN,CAAC;EAEhB;AACL,CAAC,CAAC,C","sources":["webpack://scratchmin-theme/external window \"ReactJSXRuntime\"","webpack://scratchmin-theme/external window [\"wp\",\"blockEditor\"]","webpack://scratchmin-theme/external window [\"wp\",\"blocks\"]","webpack://scratchmin-theme/external window [\"wp\",\"components\"]","webpack://scratchmin-theme/external window [\"wp\",\"data\"]","webpack://scratchmin-theme/external window [\"wp\",\"element\"]","webpack://scratchmin-theme/external window [\"wp\",\"i18n\"]","webpack://scratchmin-theme/webpack/bootstrap","webpack://scratchmin-theme/webpack/runtime/compat get default export","webpack://scratchmin-theme/webpack/runtime/define property getters","webpack://scratchmin-theme/webpack/runtime/hasOwnProperty shorthand","webpack://scratchmin-theme/webpack/runtime/make namespace object","webpack://scratchmin-theme/./blocks/relational/relational.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls, MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl, Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\nregisterBlockType('omnifseupdt/promocard', {\n     title: __('Promo Card', 'textdomain'),\n     icon: 'index-card',\n     category: 'common',\n     attributes: {\n          postId: {\n               type: 'number',\n               default: 0,\n          },\n          postType: {\n               type: 'string',\n               default: 'post',\n          },\n          postTitle: {\n               type: 'string',\n               default: '',\n          },\n          postExcerpt: {\n               type: 'string',\n               default: '',\n          },\n          customImage: {\n               type: 'string',\n               default: '',\n          },\n          postLink: {\n               type: 'string',\n               default: '',\n          },\n     },\n     edit: ({ attributes, setAttributes }) => {\n          const { postId, postType, customImage } = attributes;\n\n          const [updatedPostExcerpt, setUpdatedPostExcerpt] = useState(attributes.postExcerpt);\n\n          useDispatch('core');\n          const posts = useSelect(select => {\n               return select('core').getEntityRecords('postType', postType, { per_page: 100 });\n          }, [postType]);\n\n          const postOptions = posts ? posts.map(post => ({ label: post.title.rendered, value: post.id })) : [];\n\n          useSelect(select => {\n               const post = select('core').getEntityRecord('postType', 'post', attributes.postId);\n               if (post && post.excerpt.rendered !== updatedPostExcerpt) {\n                    setUpdatedPostExcerpt(post.excerpt.rendered);\n               }\n          });\n\n          const updatePostDetails = async (newPostId) => {\n               if (newPostId !== postId) {\n                    if (newPostId !== undefined && newPostId !== null) {\n                         const selectedPost = posts.find(post => post.id.toString() === newPostId.toString());\n                         if (selectedPost) {\n                              setAttributes({\n                                   postId: selectedPost.id,\n                                   postTitle: selectedPost.title.rendered,\n                                   postExcerpt: selectedPost.excerpt.rendered,\n                                   postLink: selectedPost.link,\n                              });\n                         }\n                    }\n               }\n          };\n\n          return (\n               <div>\n                    <InspectorControls>\n                         <PanelBody title={__('Post Settings', 'textdomain')}>\n                              <SelectControl\n                                   label={__('Post Type', 'textdomain')}\n                                   value={postType}\n                                   options={[\n                                        { label: 'Post', value: 'post' },\n                                        { label: 'Page', value: 'page' },\n                                        { label: 'Promotions', value: 'omni_promos' },\n                                        { label: 'Routes', value: 'route' },\n                                        { label: 'GoSmart', value: 'go_smart' },\n                                   ]}\n                                   onChange={(value) => setAttributes({ postType: value })}\n                              />\n                              <SelectControl\n                                   label={__('Post', 'textdomain')}\n                                   value={postId.toString()}\n                                   options={[\n                                        { label: 'Select a post', value: '' },\n                                        ...postOptions\n                                   ]}\n                                   onChange={(value) => updatePostDetails(value)}\n                              />\n                         </PanelBody>\n                         <PanelBody title={__('Custom Image', 'textdomain')}>\n                              <MediaUploadCheck>\n                                   <MediaUpload\n                                        onSelect={(media) => setAttributes({ customImage: media.url })}\n                                        allowedTypes={['image']}\n                                        render={({ open }) => (\n                                             <Button onClick={open} isDefault isLarge>\n                                                  {customImage ? __('Change Image', 'textdomain') : __('Select Image', 'textdomain')}\n                                             </Button>\n                                        )}\n                                   />\n                              </MediaUploadCheck>\n                              {customImage && (\n                                   <div style={{ marginTop: '20px' }}>\n                                        <img src={customImage} alt={__('Selected image', 'textdomain')} style={{ width: '100%' }} />\n                                        <Button onClick={() => setAttributes({ customImage: '' })} isLink isDestructive>\n                                             {__('Remove Image', 'textdomain')}\n                                        </Button>\n                                   </div>\n                              )}\n                         </PanelBody>\n                    </InspectorControls>\n                    <div className=\"custom-card-block\">\n                         {postId ? (\n                              <>\n                                   <figure>\n                                        {customImage && <img src={customImage} alt={attributes.postTitle} />}\n                                   </figure>\n                                   <div class=\"promo_excerpt_wrap\">\n                                        <p class=\"h3\">{attributes.postTitle}</p>\n                                        <p className=\"promo_excerpt\" dangerouslySetInnerHTML={{ __html: updatedPostExcerpt + ' <span class=\"arrow\"><svg version=\"1.1\" class=\"arrow_svg link_arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 22 22\" style=\"enable-background:new 0 0 22 22;\" xml:space=\"preserve\"><g class=\"Forward_arrow\" transform=\"translate(0 2)\"><path class=\"blck_lnk_arrow\" d=\"M11-2L9,0l7.57,7.57H0v2.86h16.57L9,18l2,2L22,9L11-2z\"></path></g></svg></span>' }} />\n                                   </div>\n                              </>\n                         ) : (\n                              <p>Select a post to display its card</p>\n                         )}\n                    </div>\n               </div>\n          );\n     },\n     save: ({ attributes }) => {\n          const { customImage, postLink } = attributes;\n          return (\n               <div className=\"custom-card-block\">\n                    <figure>\n                         {customImage && <img src={customImage} alt={attributes.postTitle} />}\n                    </figure>\n                    <div class=\"promo_excerpt_wrap\">\n                         <a href={postLink}>\n                              <p class=\"h3\">{attributes.postTitle}</p>\n                              <p className=\"promo_excerpt\" dangerouslySetInnerHTML={{ __html: attributes.postExcerpt + ' <span class=\"arrow\"><svg version=\"1.1\" class=\"arrow_svg link_arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 22 22\" style=\"enable-background:new 0 0 22 22;\" xml:space=\"preserve\"><g class=\"Forward_arrow\" transform=\"translate(0 2)\"><path class=\"blck_lnk_arrow\" d=\"M11-2L9,0l7.57,7.57H0v2.86h16.57L9,18l2,2L22,9L11-2z\"></path></g></svg></span>' }} />\n                         </a>\n                    </div>\n               </div>\n          );\n     },\n});\n"],"names":["registerBlockType","__","InspectorControls","MediaUpload","MediaUploadCheck","PanelBody","SelectControl","Button","useSelect","useDispatch","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","title","icon","category","attributes","postId","type","default","postType","postTitle","postExcerpt","customImage","postLink","edit","setAttributes","updatedPostExcerpt","setUpdatedPostExcerpt","posts","select","getEntityRecords","per_page","postOptions","map","post","label","rendered","value","id","getEntityRecord","excerpt","updatePostDetails","newPostId","undefined","selectedPost","find","toString","link","children","options","onChange","onSelect","media","url","allowedTypes","render","open","onClick","isDefault","isLarge","style","marginTop","src","alt","width","isLink","isDestructive","className","class","dangerouslySetInnerHTML","__html","save","href"],"sourceRoot":""}